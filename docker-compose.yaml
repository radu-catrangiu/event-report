version: '3.1'

services:
    nginx:
        image: valian/docker-nginx-auto-ssl
        restart: on-failure
        container_name: nginx
        ports:
            - 80:80
            - 443:443
        volumes:
            - ssl_data:/etc/resty-auto-ssl
        environment:
            ALLOWED_DOMAINS: 'event-report.go.ro'
            SITES: 'event-report.go.ro=frontend:80'
        networks: 
            - net

    frontend:
        build:
            context: ./frontend/
            dockerfile: Dockerfile
        image: cc-frontend-rcatrangiu:latest
        container_name: frontend
        networks:
            - net
        environment: 
            NODE_ENV: "production"
        ports:
            - 8080:80
        depends_on: 
            - backend
            - image-service
        deploy:
            replicas: 1
            restart_policy:
                condition: on-failure

    backend:
        build: 
            context: ./backend/
            dockerfile: Dockerfile
        image: cc-backend-rcatrangiu:latest
        container_name: backend
        networks:
            - net
        environment:
            MONGO_HOST: "database"
            MONGO_PORT: 27017
        depends_on: 
            - database
        deploy:
            replicas: 1
            restart_policy:
                condition: on-failure

    image-service:
        build:
            context: ./image-service/
            dockerfile: Dockerfile
        image: cc-image-service-rcatrangiu:latest
        container_name: image-service
        networks:
            - net
        environment:
            MONGO_HOST: "database"
            MONGO_PORT: 27017
        depends_on: 
            - database
        deploy:
            replicas: 1
            restart_policy:
                condition: on-failure

    database:
        image: mongo
        container_name: database
        environment:
            MONGO_INITDB_DATABASE: event_report
            MONGO_INITDB_ROOT_USERNAME: rootuser
            MONGO_INITDB_ROOT_PASSWORD: rootpass
        networks:
            - net
        volumes:
            - ./mongo/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
            - mongo_data:/data/db

networks:
    net:

volumes:
    mongo_data: {}
    ssl_data: {}
