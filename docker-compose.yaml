version: '3.1'

services:
    frontend:
        build:
            context: ./frontend/
            dockerfile: Dockerfile
        container_name: frontend
        networks:
            - net
        environment: 
            NODE_ENV: "production"
        ports:
            - 8080:80
        depends_on: 
            - backend
            - image-service

    backend:
        build: 
            context: ./backend/
            dockerfile: Dockerfile
        container_name: backend
        networks:
            - net
        environment:
            MONGO_HOST: "database"
            MONGO_PORT: 27017
        depends_on: 
            - database

    image-service:
        build:
            context: ./image-service/
            dockerfile: Dockerfile
        container_name: image-service
        networks:
            - net
        environment:
            MONGO_HOST: "database"
            MONGO_PORT: 27017
        depends_on: 
            - database

    database:
        image: mongo
        container_name: database
        environment:
            MONGO_INITDB_DATABASE: event_report
            MONGO_INITDB_ROOT_USERNAME: rootuser
            MONGO_INITDB_ROOT_PASSWORD: rootpass
        networks:
            - net
        volumes:
            - ./mongo/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
            - mongo_data:/data/db


### monitoring 

    prometheus:
        image: prom/prometheus
        container_name: prometheus
        volumes:
            - ./prometheus/:/etc/prometheus/
            # - prometheus_data:/prometheus
        command:
            - '--config.file=/etc/prometheus/prometheus.yml'
            - '--storage.tsdb.path=/prometheus'
            - '--web.console.libraries=/usr/share/prometheus/console_libraries'
            - '--web.console.templates=/usr/share/prometheus/consoles'
        ports:
            - 9090:9090
        networks:
            - net
        restart: always

    grafana:
        image: grafana/grafana
        container_name: grafana
        depends_on:
            - prometheus
        ports:
            - 3000:3000
        volumes:
            - ./grafana/provisioning/:/etc/grafana/provisioning/
        environment:
            GF_SECURITY_ADMIN_PASSWORD: "123Parola"
            GF_USERS_ALLOW_SIGN_UP: "false"
            GF_AUTH_ANONYMOUS_ENABLED: "true"
        networks:
            - net
        restart: always

    cadvisor:
        image: google/cadvisor:latest
        container_name: cadvisor
        ports:
            - 8081:8080
        volumes:
            - /:/rootfs:ro
            - /var/run:/var/run:rw
            - /sys:/sys:ro
            - /var/lib/docker/:/var/lib/docker:ro
        networks: 
            - net
        depends_on:
            - frontend
            - backend
            - image-service
            - database

networks:
    net:

volumes:
    mongo_data: {}
    # prometheus_data: {}
